from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, ContextTypes
import os
import logging

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# ‚ö†Ô∏è –ó–ê–ú–ï–ù–ò–¢–ï URL –ù–ê –í–ê–® VERCEL URL!
TOKEN = os.environ.get('BOT_TOKEN', "8273729657:AAF0XR0g4fX7J3k9DVuW4Bfe5t5KafiwWQ8")
WEBAPP_URL = os.environ.get('WEBAPP_URL', "https://miner-frontend1.vercel.app")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    
    keyboard = [
        [InlineKeyboardButton("üöÄ –ò–≥—Ä–∞—Ç—å –≤ –ú–∏–Ω–µ—Ä", web_app=WebAppInfo(url=WEBAPP_URL))]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    welcome_text = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n"
        "üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>–ú–∏–Ω–µ—Ä</b>!\n\n"
        "üéØ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:\n"
        "‚Ä¢ –û—Ç–∫—Ä—ã–≤–∞–π –∫–ª–µ—Ç–∫–∏ –∏ –∏–∑–±–µ–≥–∞–π –º–∏–Ω\n"
        "‚Ä¢ –° –∫–∞–∂–¥—ã–º —Ö–æ–¥–æ–º —Ä–∞—Å—Ç–µ—Ç –º–Ω–æ–∂–∏—Ç–µ–ª—å\n"
        "‚Ä¢ –ó–∞–±–∏—Ä–∞–π –≤—ã–∏–≥—Ä—ã—à –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç\n"
        "‚Ä¢ –ß–µ–º –±–æ–ª—å—à–µ –º–∏–Ω - —Ç–µ–º –≤—ã—à–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏!\n\n"
        "üí∞ –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: <b>50 –º–æ–Ω–µ—Ç</b>\n\n"
        "üöÄ –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É!"
    )
    
    await update.message.reply_text(
        welcome_text,
        reply_markup=reply_markup,
        parse_mode='HTML'
    )
    
    logger.info(f"User {user.id} ({user.username}) started the bot")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    help_text = (
        "üìñ <b>–ü–æ–º–æ—â—å –ø–æ –∏–≥—Ä–µ –ú–∏–Ω–µ—Ä</b>\n\n"
        "üéÆ <b>–ö–∞–∫ –∏–≥—Ä–∞—Ç—å:</b>\n"
        "1. –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω (3-24)\n"
        "2. –°–¥–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫—É (15-100 –º–æ–Ω–µ—Ç)\n"
        "3. –ù–∞–∂–º–∏—Ç–µ '–°—Ç–∞—Ä—Ç'\n"
        "4. –û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∫–ª–µ—Ç–∫–∏\n"
        "5. –ó–∞–±–∏—Ä–∞–π—Ç–µ –≤—ã–∏–≥—Ä—ã—à –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç\n\n"
        "‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b>\n"
        "‚Ä¢ –ï—Å–ª–∏ –æ—Ç–∫—Ä–æ–µ—Ç–µ –º–∏–Ω—É - –ø—Ä–æ–∏–≥—Ä–∞–µ—Ç–µ\n"
        "‚Ä¢ –ß–µ–º –±–æ–ª—å—à–µ –º–∏–Ω, —Ç–µ–º –≤—ã—à–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏\n"
        "‚Ä¢ –ú–Ω–æ–∂–∏—Ç–µ–ª—å —Ä–∞—Å—Ç–µ—Ç —Å –∫–∞–∂–¥—ã–º —Ö–æ–¥–æ–º\n\n"
        "üí° <b>–°–æ–≤–µ—Ç:</b> –ù–∞—á–Ω–∏—Ç–µ —Å 3-6 –º–∏–Ω –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏–≥—Ä—ã\n\n"
        "üéÆ /start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É"
    )
    
    await update.message.reply_text(help_text, parse_mode='HTML')

async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    stats_text = (
        "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n\n"
        "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –∏–≥—Ä—É.\n"
        "–í–∞—à –±–∞–ª–∞–Ω—Å –∏ –∏—Å—Ç–æ—Ä–∏—è –∏–≥—Ä —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.\n\n"
        "üéÆ /start - –ò–≥—Ä–∞—Ç—å"
    )
    
    await update.message.reply_text(stats_text, parse_mode='HTML')

def main():
    try:
        application = Application.builder().token(TOKEN).build()
        
        application.add_handler(CommandHandler("start", start))
        application.add_handler(CommandHandler("help", help_command))
        application.add_handler(CommandHandler("stats", stats_command))
        
        logger.info("ü§ñ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        logger.info(f"üì± WebApp URL: {WEBAPP_URL}")
        
        application.run_polling(allowed_updates=Update.ALL_TYPES)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        raise

if __name__ == '__main__':

    main()
